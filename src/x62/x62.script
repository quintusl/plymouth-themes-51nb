# This is an example plymouth plugin script

Window.SetBackgroundTopColor(0.234, 0.43, 0.705);
Window.SetBackgroundBottomColor(0.16, 0.25, 0.44);

logo.image = Image("Quintus_X62_gray_SXGAplus.png");
logo_image_ratio = logo.image.GetHeight() / logo.image.GetWidth();
progress_bar.image[10] = Image("Quintus_X62_progress_10.png");
progress_bar.image[20] = Image("Quintus_X62_progress_20.png");
progress_bar.image[30] = Image("Quintus_X62_progress_30.png");
progress_bar.image[40] = Image("Quintus_X62_progress_40.png");
progress_bar.image[50] = Image("Quintus_X62_progress_50.png");
progress_bar.image[60] = Image("Quintus_X62_progress_60.png");
progress_bar.image[70] = Image("Quintus_X62_progress_70.png");
progress_bar.image[80] = Image("Quintus_X62_progress_80.png");
progress_bar.image[90] = Image("Quintus_X62_progress_90.png");
progress_bar.image[100] = Image("Quintus_X62_progress_100.png");

if (screen_ratio > logo_image_ratio)
{
  # Screen ratio is taller than image ratio, we will match the screen height
  scale_factor =  Window.GetHeight() / logo.image.GetHeight();
}
else
{
  # Screen ratio is wider than image ratio, we will match the screen width
  scale_factor =  Window.GetWidth() / logo.image.GetWidth();
}

scaled_logo.image = logo.image.Scale(logo.image.GetWidth()  * scale_factor,
        	                     logo.image.GetHeight() * scale_factor);

logo.sprite = Sprite(scaled_logo.image);
logo.opacity_angle = 0;

fun refresh_callback ()
  {
    if (status == "normal")
      {
        logo.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - scaled_logo.image.GetWidth()  / 2);
        logo.sprite.SetY (Window.GetY() + Window.GetHeight() - scaled_logo.image.GetHeight());
      }
    else
      {
        logo.sprite.SetX (0);
        logo.sprite.SetY (0);
        logo.sprite.SetOpacity (1);
      }
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress_bar.sprite = Sprite();

fun progress_callback (duration, progress)
{
  index = Math.Int(progress * 10) * 10;

  scaled_progress_bar.image = progress_bar.image[index].Scale(progress_bar.image[index].GetWidth()  * scale_factor,
        	                                              progress_bar.image[index].GetHeight() * scale_factor);
  progress_bar.sprite.SetImage(scaled_progress_bar.image);
  progress_bar.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - scaled_progress_bar.image.GetWidth()  / 2);
  progress_bar.sprite.SetY (Window.GetY() + Window.GetHeight() - scaled_progress_bar.image.GetHeight());
  progress_bar.sprite.SetZ (1000);
  progress_bar.sprite.SetOpacity (1);
}

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  color_logo.image = Image("Quintus_X62_SXGAplus.png");
  color_logo_image_ratio = color_logo.image.GetHeight() / color_logo.image.GetWidth();

  if (screen_ratio > color_logo_image_ratio)
  {
    scale_factor =  Window.GetHeight() / color_logo.image.GetHeight();
  }
  else
  {
    scale_factor =  Window.GetWidth() / color_logo.image.GetWidth();
  }
  scaled_color_logo.image = color_logo.image.Scale(color_logo.image.GetWidth()  * scale_factor,
                                                   color_logo.image.GetHeight() * scale_factor);
  color_logo.sprite = Sprite(scaled_color_logo.image);
  color_logo.opacity_angle = 0;
  color_logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprites = [];
message_sprite_count = 0;
message_sprite_y = 10;

fun display_message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprites[message_sprite_count] = Sprite(my_image);
  message_sprites[message_sprite_count].SetPosition(10, message_sprite_y, 10000);
  message_sprites[message_sprite_count].text = text;
  message_sprite_count++;
  message_sprite_y += my_image.GetHeight();
}

fun hide_message_callback (text)
{
  for (i = 0; i < message_sprite_count; i++)
    {
      if (message_sprites[i].text == text)
        message_sprites[i] = NULL;
    }
}

Plymouth.SetDisplayMessageFunction (display_message_callback);
Plymouth.SetHideMessageFunction (hide_message_callback);
